/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package exercicios_java_sala;

import java.util.Scanner;
import biblioteca_class_exercicios.OperationPrime;

/**
 *
 * @author ACER
 */

/*
19º Escreva um programa que leia um número inteiro e determine se ele é um 
número primo de Mersenne ou não. Um número primo de Mersenne é um número primo da 
forma 2^p - 1, onde p é também um número primo. Utilize estruturas condicionais e loops.
*/

/// ARQUIVO - 1
/// FUNCAO PRINCIPAL
public class Exercicios_Java_Sala8 {
    
    
    public static void main(String[] args) {
        
        Scanner read = new Scanner(System.in);
        OperationPrime prime = new OperationPrime();
        
        int numero = 0;
        
        /// LEITURA DO NUMERO
        System.out.print("Valor: ");
        numero = read.nextInt();
        
        /// EXIBINDO SE O NUMERO E PRIMO E SE O NUMERO PRIMO E UMA MERSENNE PRIMO
        System.out.println("O numero e..: " + prime.integerPrime(numero));
        System.out.println("A mersenne e: " + prime.primeMersenne(numero));
        
    }
    
}


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package biblioteca_class_exercicios;

/**
 *
 * @author ACER
 */

/// ARQUIVO - 2
/// CLASSE PARA AS OPERACOES DOS NUMEROS PRIMOS
public class OperationPrime {
    
    /// SABER SE O NUMERO E PRIMO
    public String integerPrime(int IntObjct){
        
       /// NUMERO PRIMOS SAO MAIORES QUE 1
       if(IntObjct <= 1){
           return "no_prime";
       }
       
       /// VAR PARA OBTER O RESULTADO DA DIVISAO
       int resultNoPrime = 0;
       
       /// O UNICO NUMERO PRIMO PAR E O 2
       if(IntObjct == 2){
           return "prime";
       }
        
       /// FOR PARA DETERMINAR SE O NUMERO NAO E PRIMO
       for(var i = 2; i < IntObjct; i++){
            
           /// RESULTADO DA DIVISAO DO NUMERO PELO O INTERVALOR
           resultNoPrime = (IntObjct / i);
            
           /// SE O RESULTADO MULTIPLICADO PELO O INTERVALOR DO NUMERO PRIMO FOR IGUAL AO NUMERO PRIMO, ENTAO NAO E PRIMO
           if((resultNoPrime * i) == IntObjct){
               return "no_prime";
           }
       }
        
       /// QUANDO O FOR TERMINAR, ENTAO O NUMERO DE ENTRADA E PRIMO
       return "prime";
    }
    
    /// DETERMINAR SE O NUMERO PRIMO E UM MERSENNE PRIMO
    public String primeMersenne(int numX){
        
        /// O VALOR DA MERSENNE
        int mersenne = 0;
        
        /// SE O NUMERO DE ENTRADA NAO FOR PRIMO
        if(integerPrime(numX).contains("no_prime")){
            return "the number must be prime!! to be a mersenne cousin";
        }
        
        /// FOR PARA PERCORRER O DE 0 ATE O NUEMRO DE ENTRADA E DETERMINAR SE E UMA MERSENNE PRIMO
        for(var i = 0; i < numX; i++){
            
            /// DETERMINANDO SE O INTERVALO E PRIMO
            if(integerPrime(i).equals("prime")){
                
                /// OBTENDO O VALOR DA MERSENNE DA OCORRENCIA ATUAL
                mersenne = (int) (Math.pow(2, i) - 1);
                
                /// SE O VALOR DA MERSENNE FOR MAIOR QUE O VALOR DE ENTRADA, ENTAO O VALOR DA ENTRADA NAO E UMA MERSENNE PRIMO
                if(mersenne > numX){
                    return "mersenne no prime";
                }
                
                /// SE O VALOR DA MERSSENE FOR IGUAL A DA ENTRADA, ENTAO O VALOR DA ENTRADA E UM MERSEENE PRIMO
                if(mersenne == numX){
                    return "mersenne prime";
                }
            }
        }
        
        return "mersenne no prime";
    }
}
